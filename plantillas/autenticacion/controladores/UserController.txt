<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use App\Http\Requests\UserCreateRequest;
use App\Http\Requests\UserUpdateRequest;
use App\Role;
use App\User;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Hash;

class UserController extends Controller {

    public function index() {
        $lista_users = User::all()->except(User::all()->first()->id);
        return view('users.index')->with('lista_users', $lista_users);
    }

    public function create() {
        $roles = Role::all();
        return view('users.create')->with('lista_roles', $roles);
    }

    public function store(UserCreateRequest $request) {
        $data = $request->all();

        $users = new User();
        $users->username = $data['username'];
        $users->password = Hash::make($data['password']);
        $users->role_id = $data['role_id'];
        $users->save();

        return response()->json(true);
    }

    public function show($id) {
        $users = User::find($id);
        return view('users.show')->with('users', $users);
    }

    public function edit($id) {
        $roles = Role::all();
        $users = User::find($id);
        return view('users.edit')->with('users', $users)->with('lista_roles', $roles);
    }

    public function update(UserUpdateRequest $request, $id) {
        $data = $request->all();

        $users = User::where('id', $id)->first();

        $users->username = $data['username'];
        $users->role_id = $data['role_id'];
        $users->save();

        return response()->json(true);
    }

    public function destroy($id) {
        User::find($id)->delete();
        return redirect('/users');
    }

    public function editPassword() {
        return view('auth.change_password');
    }

    public function changePassword(Request $request) {

        $data = $request->all();

        $id = auth()->user()->id;
        $user = User::find($id);
        $user->password = Hash::make($data['new_password']);
        $user->save();

        return response()->json(true);
    }

}
